{
  "name": "connected_keywords",
  "description": "Retrieve connected keywords for a specified keyword during a specific period.  Unless you are looking for trending keywords connected to another keyword for a specific period, it is good to use the longer period such as quarterly and monthly to get out enough data. ",
  "color": "linear-gradient(rgb(222,168,37), rgb(164,132,157))",
  "iconSrc": "",
  "schema": "[{\"id\":0,\"property\":\"search\",\"description\":\"use this field to perform a broader search in the text field. Example: \\\" AWS \\\"\",\"type\":\"string\",\"required\":true},{\"id\":1,\"property\":\"period\",\"description\":\"The period for which you want to fetch connected keywords. Accepted values are weekly, monthly, quarterly, or yearly. Example: \\\" quarterly \\\"\",\"type\":\"string\",\"required\":true},{\"id\":2,\"property\":\"sort\",\"description\":\"\",\"type\":\"string\",\"required\":false},{\"id\":3,\"property\":\"limit\",\"description\":\"\",\"type\":\"number\",\"required\":false}]",
  "func": "const fetch = require('node-fetch');\nconst apiUrl = 'https://public.api.safron.io/v2/connected-keywords';\n\nconst periods = ['yearly', 'quarterly', 'monthly', 'weekly', 'daily'];\n\nfunction getNextPeriod(currentPeriod) {\n\tconst index = periods.indexOf(currentPeriod);\n\treturn index >= 0 && index < periods.length - 1 ? periods[index + 1] : null;\n}\n\nlet queryParams = `search=${encodeURIComponent($search)}`;\n\nif ($sort) queryParams += `&sort=${$sort}`;\nif ($limit) queryParams += `&limit=${$limit}`;\n\nlet currentPeriod = $period;\n\nwhile (currentPeriod) {\n\tlet url = `${apiUrl}?${queryParams}&period=${currentPeriod}`;\n\n\ttry {\n\t\tconsole.log(`Attempting with period: ${currentPeriod}`);\n\t\tconst result = await makeApiRequest(url);\n\t\treturn JSON.stringify(result);\n\n\t} catch (error) {\n\t\tconsole.warn(`Request failed for period: ${currentPeriod}. Retrying...`);\n\t\tcurrentPeriod = getNextPeriod(currentPeriod);\n\n\t\tif (!currentPeriod) {\n\t\t\tconsole.error('All period attempts failed:', error);\n\t\t\treturn `Error: ${error.message}`;\n\t\t}\n\t}\n}\n\nasync function makeApiRequest(url) {\n\tconst response = await fetch(url, {\n\t\tmethod: 'GET',\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json',\n\t\t},\n\t});\n\n\tif (!response.ok) {\n\t\tthrow new Error('Failed to fetch connected keywords');\n\t}\n\n\treturn await response.json();\n}"
}