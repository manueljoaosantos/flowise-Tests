{
  "name": "safron_keywords",
  "description": "Fetch the top and trending keywords within the tech industry for specified time periods for a category or search. \\n\\nYou can set either category OR search for a keyword, but only use one. If you set category you get all keywords within this category or you set search and then you get only the keywords that have been found via search. ",
  "color": "linear-gradient(rgb(179,149,3), rgb(233,222,78))",
  "iconSrc": "",
  "schema": "[{\"id\":1,\"property\":\"period\",\"description\":\"The period for which you want to fetch keyword data (e.g., \\\" daily \\\", \\\" weekly \\\", \\\" monthly \\\", \\\" quarterly \\\"). Example: \\\" daily \\\", \\\" weekly \\\", etc.\",\"type\":\"string\",\"required\":true},{\"id\":2,\"property\":\"category\",\"description\":\"The category of keywords (choose between: \\\" subjects \\\", \\\" frameworks \\\", \\\" languages \\\", \\\" concepts \\\", \\\" hardware \\\", \\\" websites \\\", \\\" people \\\", \\\" platforms \\\", \\\" companies \\\", \\\" ai  \\\", \\\" tools  \\\", etc.). This helps in narrowing down the results to specific types of keywords.\",\"type\":\"string\",\"required\":false},{\"id\":3,\"property\":\"sort\",\"description\":\"Sort order of the results. It can be \\\" trending \\\" (default), \\\" top \\\", \\\" alphabetical - a \\\", or\\\" alphabetical - z \\\". Example:\\\" trending  \\\", \\\" top \\\"\",\"type\":\"string\",\"required\":false},{\"id\":4,\"property\":\"search\",\"description\":\"search for a specific keyword to get statistics for a period. Example: \\\" Elon Musk \\\"\\\"\",\"type\":\"string\",\"required\":false}]",
  "func": "const fetch = require('node-fetch'); enter\n\n// Define the API endpoint enter\nconst apiUrl = 'https://public.api.safron.io/v2/keywords'; enter\n\n// Manually construct the query string enter\nlet queryParams = `period=${$period}`; enter\n\n// Optional parameters enter\nif ($search) { enter\n    queryParams += `&search=${$search}`; enter\n} else if ($category) { enter\n    queryParams += `&category=${$category}`; enter\n} enter\n\nif ($sort) queryParams += `&sort=${$sort}`; enter\n\n// Construct the full URL with query parameters enter\nconst url = `${apiUrl}?${queryParams}&limit=15`; enter\n\ntry { enter\n    // Make the API request enter\n    console.log(url); enter\n    const response = await fetch(url, { enter\n        method: 'GET', enter\n        headers: { enter\n            'Content-Type': 'application/json', enter\n        }, enter\n    }); enter\n\n    // Check if the response is OK (status code 200) enter\n    if (!response.ok) { enter\n        throw new Error('Failed to fetch trending keywords, url: ' + url); enter\n    } enter\n\n    // Parse the response JSON enter\n    const result = await response.json(); enter\n\n    // Return the fetched keywords enter\n    return JSON.stringify(result); enter\n} catch (error) { enter\n    console.error('Error fetching keywords:', error); enter\n    return `Error: ${error.message}`; enter\n}"
}